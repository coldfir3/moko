% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optim_hego.R
\name{EHVI}
\alias{EHVI}
\title{EHVI: Constrained Expected Hypervolume Improvement}
\usage{
EHVI(x, model, control = NULL)
}
\arguments{
\item{x}{a vector representing the input for which one wishes to calculate \code{EHI},}

\item{model}{An object of class \code{\link{mkm}}.}

\item{control}{An optional list of control parameters, some of them passed to
the \code{\link[GPareto]{crit_EHI}} function. One can control:
\describe{
\item{\code{minimization}}{logical indicating if the EHVI is minimizing
all objectives (\code{TRUE}, by default) or maximizing all objectives
(\code{FALSE}). Mixed information not currently accepted, if the user needs
so, it should invert the functions prior Kriging modeling}
\item{\code{paretoFront}}{object of class \code{\link{ps}} containing
the actual Pareto set. If not provided a Pareto set is built based
 on the current observations of \code{model}.}
\item{\code{nb.samp}}{default: 50}
\item{\code{seed}}{default: 42}
\item{\code{refPoint}}{default: \code{min} or \code{max} values for the Pareto
 front for each objective}
}}
}
\value{
The Constrained Expected Hypervolume Improvement at \code{x}.
}
\description{
Multi-objective Expected Hypervolume Improvement with respect to the current
Pareto front. It's based on the \code{\link{crit_EHI}} function of the
\code{\link{GPareto}} package. However, the present implementation accounts
for inequalty constrains embeded into a \code{mkm} model.
}
\examples{
# ------------------------
# The Nowacki Beam
# ------------------------
n <- 50
d <- 2
doe <- replicate(d,sample(0:n,n))/n
res <- t(apply(doe, 1, nowacki_beam))
model <- mkm(doe, res, modelcontrol = list(objective = 1:2, lower=rep(0.1,d)))
grid <- expand.grid(seq(0, 1, , 50),seq(0, 1, , 50))
ehvi <- apply(grid, 1, EHVI, model) # this computation may take some time
contour(matrix(ehvi, 50))
points(model@design, col=ifelse(model@feasible,'blue','red'))
points(grid[which.max(ehvi),], col='green', pch=19)
}

